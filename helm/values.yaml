# ------------------------------------------------------------------------------
# Copyright 2012-2019 Aerospike, Inc.
#
# Portions may be licensed to Aerospike, Inc. under one or more contributor
# license agreements.
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may not
# use this file except in compliance with the License. You may obtain a copy of
# the License at http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations under
# the License.
# ------------------------------------------------------------------------------

###
### Configuration file to set default values for deployment using Helm
###

### Statefulset and K8s config variables
namespace: default
dbReplicas: 3 # Also controles number of nodes in the aerospike cluster.
terminationGracePeriodSeconds: 120

### Aerospike server enterprise docker image
image:
  repository: aerospike/aerospike-server-enterprise
  tag: 4.7.0.2

### Aerospike tools docker image
toolsImage:
  repository: aerospike/aerospike-tools
  tag: 3.22.0

### Aerospike Deployment configurations
autoGenerateNodeIds: false

aerospikeNamespace: "test"
aerospikeNamespaceMemoryGB: "1"
aerospikeReplicationFactor: "2"
aerospikeDefaultTTL: "0"

aerospikeFeatureKeyFilePath: ""

### Aerospike cluster security configuration
# aerospikeSecurity:
#   enabled: false
#   aerospikeUsername: "admin"
#   aerospikePassword: "admin"


### Deployment specific configurations

# Rollout ConfigMap/Secrets changes on 'helm upgrade'
# Alternatively, use 'kubectl rollout restart'
autoRolloutConfig: false

# HostNetworking and Platform
# Platform can be set to "eks", "gke", or "none"
# With 'platform' set and 'hostNetworking' enabled, client applications from outside the network can connect to Aerospike Cluster.
hostNetworking: false
platform: none

# Affinity / AntiAffinity configurations
# Setting 'antiAffinity' option will prevent two pods of the same release be scheduled on the same node.
# 'antiAffinity' levels can be "off" (not set), "soft" (preferredDuringSchedulingIgnoredDuringExecution) and "hard" (requiredDuringSchedulingIgnoredDuringExecution)
# Set a desired 'antiAffinityWeight' in range 1-100 for "soft" antiAffinity option.
# 'affinity' option can be used to defined any custom nodeAffinity/podAffinity/podAntiAffinity rules.
antiAffinity: "off"
antiAffinityWeight: 1
affinity: {}
  # nodeAffinity:
  #   requiredDuringSchedulingIgnoredDuringExecution:
  #     nodeSelectorTerms:
  #     - matchExpressions:
  #       - key: kubernetes.io/hostname
  #         operator: In
  #         values:
  #         - gke-gke-blr-default-pool-06a23412-0dkt

persistenceStorage: {}
#  - mountPath: /opt/aerospike/data
#    enabled: false
#    name: datadir
#    storageClass: ssd
#    accessMode: ReadWriteOnce
#    volumeMode: Filesystem
#    size: 1Gi
#  - devicePath: /dev/sdb
#    enabled: false
#    name: data-dev
#    storageClass: ssd
#    accessMode: ReadWriteOnce
#    size: 1Gi
#    volumeMode: Block

# Don't specify same 'mountPath' in both 'volumes' and 'persistenceStorage' configs.
volumes:
 - mountPath: /opt/aerospike/data
   name: datadir
   template:
     emptyDir: {}
#  - mountPath: /opt/aerospike/data2
#    name: datadir2
#    template:
#      emptyDir: {}

resources: {}
  # limits:
  #   cpu: 1
  #   memory: 1Gi
  # requests:
  #   cpu: 1
  #   memory: 1Gi


### Dynamic configuration - Used during 'helm install...' etc.
# confFilePath:
# featureKeyFilePath:
